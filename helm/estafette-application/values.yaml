# Default values for estafette-application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# TODO move all names to dedicated template to centralize
#TODO add unit testing
#TODO remove Travix hostnames from code
#TODO use $.Capabilities.APIVersions.Has instead of `SemVerCompare`
# TODO extract all common logic from deployment into dedicated template to reuse on jobs and other
# TODO revisit .Release.Name usages, maybe replace by template estafette-application.name
#TODO revisit if removing .HasVolumeMounts for volumes is ok (worst case scenario we render empty volumes

#TODO check if it can fail or warn on non-mapped values provided?
#TODO have a look at values.schema.json
#TODO support volume mounts
#TODO revisit all labels
#TODO discuss need for explicit namespace (maybe flag as Helm don't delete??)
#TODO revisit app name (Release.name will collide when using canaries)
#TODO support overriding of files??
#TODO make configmap work with external directory once https://github.com/helm/helm/pull/8841 gets merged
#TODO check if we can use newer versions of k8s hpa to use CPU and/or memory
#TODO revisit version of ingress (spec has to change depending on version)
#TODO revisit if certificate-secret.yaml has to concatenate $hostnames even when hostnames go to service (esp, espv2 and public visibilities)
# TODO revisit if sidecars default memory limit should match default memory request (better default for QoS assuming cpuLimit is provided)
#TODO revisit if Istio should be supported

#TODO revisit this to see how Estafette can provide them (CLI --set??)
extraLabels:
  a: "1.0"

os: ""



#TODO should this be grouped?
iapBackendConfigTimeout: 30
#TODO make mandatory
environment: ""
#TODO validate values

releaseData:
  releaseService: ""
  track: ""
  atomicId: ""
  version: ""
  releaseId: ""
  triggeredBy: ""
  gitRepository: ""
  gitBranch: ""
  gitRevision: ""

googleCloudCredentials:
  enabled: false
  appName: ""
  #TODO support legacy file??
  disableServiceAccountKeyRotation: false

imagePullSecret:
  username: ""
  password: ""
  email: ""
  registry: ""

secrets:
  mountpath: /secrets
  data: {}
configmaps:
  mountpath: /configs
  data: {}

deployment:
  image: ""
  tag: ""
  replicas: 3
  imagePullPolicy: IfNotPresent
  containerPort: 5000
  additionalContainerPorts: []
  progressDeadlineSeconds: 600
  strategyType: RollingUpdate
  prometheusScrapeMetrics: true
  prometheusScrapePath: /metrics
  prometheusScrapePort: ""
  rollingUpdateMaxSurge: "25%"
  # TODO check if this is ideal when having more than one replica
  rollingUpdateMaxUnavailable: 0
  enablePayloadLogging: false
  tolerations:
    preferPreemptibles: false
    useWindowsNodes: false
    extraTolerations: []
  initContainers: []
  environmentVariables: {}
  secretEnvironmentVariables: {}
  cpuRequest: ""
  memoryRequest: ""
  cpuLimit: ""
  memoryLimit: ""
  prestopSleep: ""
  prestopSleepSeconds: 20
  liveness:
    enabled: true
    path: "/liveness"
    port: ""
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  readiness:
#    TODO revisit if for headless readiness should be disabled
    enabled: true
    path: "/readiness"
    port: ""
#    TODO revisit if 0 is the valid value
    initialDelaySeconds: 0
    timeoutSeconds: 1
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  configs: {}
  additionalVolumes: []
  additionalVolumeMounts: []

ingress:
  visibility: private
  allowHTTP: false
  defaultTimeoutSeconds: 60
  iapOauthCredentialsClientID: ""
  iapOauthCredentialsClientSecret: ""
  nginxClientBodyBufferSize: "8k"
  nginxProxyBodySize: "128m"
  nginxProxyBuffersNumber: 4
  nginxProxyBufferSize: "4k"
#  TODO should all defaults be 60 seconds??
  nginxProxyConnectTimeout: ""
  nginxProxySendTimeout: ""
  nginxProxyReadTimeout: ""
  useInternalIngress: true
  #  TODO validate values (only certain supported ones)
  nginxLoadBalanceAlgorithm: ""
#  TODO default whitelisted ips?? Only for public-whitelist???
  nginxWhitelistedIPS: []
  hosts: []
  internalHosts: []
  apigeeHosts: []
  useWildcardCertificate: true
  wildCardTlsSecretName: "travix-shared-wildcard-letsencrypt-certificate"
  tlsSecretName: ""
  path: "/"
  internalPath: ""
  apigeeAuthTlsSecret: ""
  apigeAuthTlsVerifyDepth: 3
#  TODO should container native load balancing be set to true by default?
  useContainerNativeLoadBalancing: false

service:
  type: ClusterIP
  port: 80
  usePrometheusProbe: ""
  trustedIpRanges: ["103.21.244.0/22",
                    "103.22.200.0/22",
                    "103.31.4.0/22",
                    "104.16.0.0/12",
                    "108.162.192.0/18",
                    "131.0.72.0/22",
                    "141.101.64.0/18",
                    "162.158.0.0/15",
                    "172.64.0.0/13",
                    "173.245.48.0/20",
                    "188.114.96.0/20",
                    "190.93.240.0/20",
                    "197.234.240.0/22",
                    "198.41.128.0/17"]
  additionalServicePorts: []
  readiness:
    path: /readiness

autoscaling:
  horizontal:
    enabled: true
    minReplicas: 3
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
    useHpaScaler: false
    hpaScalerPromQuery: ""
    hpaScalerRequestsPerReplica: 1
#    TODO revisit this value
    hpaScalerDelta: 0
    hpaScalerScaleDownMaxRatio: 1
  vertical:
    enabled: false
#    TODO validate possible values
    updateMode: "Off"

sidecars:
  openresty:
    enabled: true
    image: estafette/openresty-sidecar@sha256:2aa9f2c8c3f506e0f6cc70871701b5ac81aa0f12e8574c7b8213e4d0379d2ddd
    cpuRequest: ""
    memoryRequest: ""
    cpuLimit: ""
    memoryLimit: ""
    healthcheckpath: /readiness
    environmentVariables: {}
    secretEnvironmentVariables: {}
    customProperties: {}
  esp:
    enabled: ""
    image: gcr.io/endpoints-release/endpoints-runtime:1.56.0
    cpuRequest: ""
    memoryRequest: ""
    cpuLimit: ""
    memoryLimit: ""
    requestTimeout: ""
    configId: ""
    customProperties: {}
  espv2:
    enabled: ""
    image: gcr.io/endpoints-release/endpoints-runtime:2.25.0
    cpuRequest: ""
    memoryRequest: ""
    cpuLimit: ""
    memoryLimit: ""
    requestTimeout: ""
    configId: ""
    customProperties: {}
  cloudsqlproxy:
    enabled: ""
    image: eu.gcr.io/cloudsql-docker/gce-proxy:1.21/0
    cpuRequest: ""
    memoryRequest: ""
    cpuLimit: ""
    memoryLimit: ""
    dbinstanceconnectionname: ""
    sqlproxyport: "5432"
    sqlproxyterminationtimeoutseconds: "60"
    environmentVariables: {}
    secretEnvironmentVariables: {}
    customProperties: {}
  additionalSidecars: []